datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Contest {
  id                   Int @id  @default(1)
  numPlayers           Int
  numProblems          Int
  nextPlayerSubmission Int @default(1)

  contestTeams ContestTeam[]
}

model ContestTeam {
  id          Int     @id
  contest     Contest @relation(fields: [contestId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  contestId   Int
  chosenName  String
  accessKey   String  @unique @default(cuid())

  submissions Submission[]
}

model Submission {
  id            String    @id @default(cuid())
  submittedAt   DateTime  @default(now())
  state         String
  scoreMs       Int
  scoreJ        Int

  ContestTeam ContestTeam @relation(fields: [contestTeamId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  contestTeamId Int
}